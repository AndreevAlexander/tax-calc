@page "/manage-incomes/{ProfileId}/add"

@using TaxCalculator.WebFrontend.Models
@using TaxCalculator.WebFrontend.Shared.FormInputs
@using TaxCalculator.WebFrontend.Validation
@using TaxCalculator.Cqrs.Contracts.Bus
@using TaxCalculator.WebFrontend.Pages.Incomes.Commands
@using TaxCalculator.Cqrs.Contracts
@using TaxCalculator.Contracts
@using TaxCalculator.WebFrontend.Extensions

@inject ICommandBus _commandBus
@inject NavigationManager _navigationManager
@inject IMapper _mapper

<PageTitle>Add Income</PageTitle>

<div>
    <div>
        <h3>Add income</h3>
    </div>
    <br />
    <div>
        <EditForm OnSubmit="@HandleSubmitAsync" EditContext="@EditContext">
            <Validator TModel="IncomeModel" OnValidated="@(() => this.StateHasChanged())" />
            
            <NumericInput Label="Amount"
                       MessageFor="@(() => IncomeModel.Value)"
                       @bind-Value="@IncomeModel.Value" />
            
            <DateInput Label="Income date" 
                       MessageFor="@(() => IncomeModel.IncomeDate)"
                       @bind-Value="@IncomeModel.IncomeDate"/>
            
            <ButtonSubmit IsEnabled="@IsValid" />
        </EditForm>
    </div>
</div>
@code {
    [Parameter]
    public string ProfileId { get; set; }

    private bool IsValid => !EditContext.GetValidationMessages().Any();
    
    private IncomeModel IncomeModel { get; } = new();
    
    private EditContext EditContext { get; set; }

    protected override void OnInitialized()
    {
        IncomeModel.TaxProfileId = ProfileId.ToGuid();
        EditContext = new EditContext(IncomeModel);
    }

    private async Task HandleSubmitAsync()
    {
        var command = _mapper.Map<CreateIncomeCommand>(IncomeModel);
        
        var result = await _commandBus.DispatchAsync(command);
        
        if (result.Status == CommandStatus.Success)
        {
            _navigationManager.NavigateTo($"/manage-incomes/{ProfileId}");
        }
    }
}