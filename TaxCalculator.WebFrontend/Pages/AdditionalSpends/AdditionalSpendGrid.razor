@page "/manage-additional-spends/{ProfileId}"

@using TaxCalculator.Domain.Entities
@using TaxCalculator.WebFrontend.Data

@inject WebApi _webApi

@if (AdditionalSpends == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <div>
        <div style="display: flex; justify-content: space-between;">
            <h3>Manage additional spends</h3>
            <NavLink href="#" class="btn btn-primary">Add</NavLink>
        </div>
        <br/>
        <div>
            <table class="table" style="width: 100%;">
                <thead>
                <tr>
                    <th>Amount</th>
                    <th>Applied Before Taxation</th>
                    <th>Actions</th>
                </tr>
                </thead>
                <tbody>
                    @foreach (var additionalSpend in AdditionalSpends)
                    {
                        <tr>
                            <td>@additionalSpend.Amount</td>
                            <td>@(additionalSpend.AppliedBeforeTax ? "Yes" : "No")</td>
                            <td style="box-sizing: border-box">
                                <NavLink href="#" class="btn btn-warning">Edit</NavLink>
                                <button class="btn btn-danger"
                                        onclick="@(() => HandleDeleteAsync(additionalSpend.Id))">
                                    Delete
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

@code {
    [Parameter]
    public string ProfileId { get; set; }
    
    private List<AdditionalSpend>? AdditionalSpends { get; set; }

    protected override async Task OnInitializedAsync()
    {
        AdditionalSpends = (await _webApi.GetManyAsync<AdditionalSpend>($"AdditionalSpend?ProfileId={ProfileId}"))
            .ToList();
    }

    private async Task HandleDeleteAsync(Guid id)
    {
        var result = await _webApi.Remove($"AdditionalSpend?AdditionalSpendId={id}");
        if (result.RecordId != null)
        {
            AdditionalSpends = AdditionalSpends?.Where(x => x.Id != id).ToList();
            StateHasChanged();
        }
    }
}