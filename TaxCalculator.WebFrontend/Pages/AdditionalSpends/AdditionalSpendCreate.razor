@page "/manage-additional-spends/{ProfileId}/add"

@using TaxCalculator.WebFrontend.Models
@using TaxCalculator.WebFrontend.Validation
@using TaxCalculator.WebFrontend.Shared.FormInputs
@using TaxCalculator.WebFrontend.Data

@inject WebApi _webApi
@inject NavigationManager _navigationManager

<PageTitle>Add Additional Spend</PageTitle>

<div>
    <div>
        <h3>Add additional spend</h3>
    </div>
    <br />
    <div>
        <EditForm EditContext="@EditContext" OnSubmit="@HandleSubmitAsync">
            <Validator TModel="CreateAdditionalSpendModel" OnValidated="@(() => this.StateHasChanged())" />
            
            <TextInput Label="Amount" 
                       @bind-Value="@CreateAdditionalSpendModel.Amount"
                       MessageFor="@(() => CreateAdditionalSpendModel.Amount)"/>
            
            <CheckBoxInput Label="Applied Before Taxation"
                           @bind-Value="@CreateAdditionalSpendModel.AppliedBeforeTax"/>
            
            <ButtonSubmit IsEnabled="@IsValid"/>
        </EditForm>        
    </div>
</div>

@code {
    [Parameter]
    public string ProfileId { get; set; }
    
    private EditContext EditContext { get; set; }

    private CreateAdditionalSpendModel CreateAdditionalSpendModel { get; } = new();

    public bool IsValid => !EditContext.GetValidationMessages().Any();

    protected override async Task OnInitializedAsync()
    {
        CreateAdditionalSpendModel.TaxProfileId = ProfileId;
        EditContext = new EditContext(CreateAdditionalSpendModel);
    }

    private async Task HandleSubmitAsync()
    {
        var result = await _webApi.Create(CreateAdditionalSpendModel, "AdditionalSpend");

        if (result.RecordId != null)
        {
            _navigationManager.NavigateTo($"/manage-additional-spends/{ProfileId}");
        }
    }
}