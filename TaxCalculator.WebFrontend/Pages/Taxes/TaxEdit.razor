@page "/tax/edit/{ProfileId}/{TaxId}"

@using TaxCalculator.WebFrontend.Data
@using TaxCalculator.WebFrontend.Models
@using TaxCalculator.Domain.Enums
@using TaxCalculator.Domain.Entities

@inject WebApi _webApi
@inject NavigationManager _navigationManager

@if (TaxTypes == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <div>
        <div>
            <h3>Edit tax configuration</h3>
        </div>
        <div>
            <EditForm Model="@Tax" OnSubmit="@HandleSubmitAsync">
                <div style="margin: 5px; display: flex; justify-content: space-between;">
                    <h6 style="width: 150px">Amount</h6>
                    <InputText class="form-control" @bind-Value=Tax.Amount />
                </div>
                <br />
                <div style="margin: 5px; display: flex; justify-content: space-between;">
                    <h6 style="width: 150px">Applies before</h6>
                    <InputText class="form-control" @bind-Value=Tax.AppliesBefore />
                </div>
                <br />
                <div style="margin: 5px; display: flex; justify-content: flex-start;">
                    <h6 style="width: 150px">Is Percentage</h6>
                    <InputCheckbox @bind-Value=Tax.IsPercentage />
                </div>
                <br />
                <div style="margin: 5px; display: flex; justify-content: flex-start;">
                    <h6 style="width: 150px">Tax type</h6>
                    <InputSelect @bind-Value=Tax.TaxType class="form-control">
                        <option value="null" selected="selected" disabled="disabled">Select tax type</option>
                        @foreach (var type in TaxTypes)
                        {
                            <option value="@type.Key">@type.Value</option>
                        }
                    </InputSelect>
                </div>
                <br />
                <div style="margin: 5px">
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </EditForm>  
        </div>
    </div>
}

@code {

    [Parameter]
    public string ProfileId { get; set; }
    
    [Parameter]
    public string TaxId { get; set; }

    public UpdateTaxModel Tax { get; set; } = new();

    public Dictionary<TaxType, string>? TaxTypes { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var tax = await _webApi.GetOneAsync<Tax>($"Tax/one?TaxId={TaxId}");

        Tax.Id = tax.Id;
        Tax.Amount = tax.Amount.ToString();
        Tax.AppliesBefore = tax.AppliesBefore != null ? tax.AppliesBefore.ToString() : null;
        Tax.TaxType = tax.TaxType;
        
        TaxTypes = new Dictionary<TaxType, string>
        {
            {TaxType.IncomeTax, "Income tax"},
            {TaxType.SocialTax, "Social tax"}
        };
    }

    private async Task HandleSubmitAsync()
    {
        var result = await _webApi.Update(Tax, "Tax");
        if (result.RecordId != null)
        {
            _navigationManager.NavigateTo($"tax-profile/details/{ProfileId}");
        }
    }

}