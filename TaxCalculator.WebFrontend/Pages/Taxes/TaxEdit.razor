@page "/tax/edit/{ProfileId}/{TaxId}"

@using TaxCalculator.WebFrontend.Data
@using TaxCalculator.WebFrontend.Models
@using TaxCalculator.WebFrontend.Shared.FormInputs
@using TaxCalculator.Domain.Enums
@using TaxCalculator.Domain.Entities

@inject WebApi _webApi
@inject NavigationManager _navigationManager

@if (TaxTypes == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <div>
        <div>
            <h3>Edit tax configuration</h3>
        </div>
        <br/> 
        <div>
            <EditForm Model="@Tax" OnSubmit="@HandleSubmitAsync">
                <TextInput Label="Amount" @bind-Value="Tax.Amount" />
                <TextInput Label="Applies before" @bind-Value="Tax.AppliesBefore" />
                <CheckBoxInput Label="Is Percentage" @bind-Value="Tax.IsPercentage"/>
                <SelectInput Label="Tax type" DefaultOption="Select tax type" Data="@TaxTypes" @bind-Value="@Tax.TaxType" />
                <ButtonSubmit />
            </EditForm>  
        </div>
    </div>
}

@code {

    [Parameter]
    public string ProfileId { get; set; }
    
    [Parameter]
    public string TaxId { get; set; }

    public UpdateTaxModel Tax { get; set; } = new();

    public Dictionary<TaxType, string>? TaxTypes { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var tax = await _webApi.GetOneAsync<Tax>($"Tax/one?TaxId={TaxId}");

        Tax.Id = tax.Id;
        Tax.Amount = tax.Amount.ToString();
        Tax.AppliesBefore = tax.AppliesBefore != null ? tax.AppliesBefore.ToString() : null;
        Tax.TaxType = tax.TaxType;
        
        TaxTypes = new Dictionary<TaxType, string>
        {
            {TaxType.IncomeTax, "Income tax"},
            {TaxType.SocialTax, "Social tax"}
        };
    }

    private async Task HandleSubmitAsync()
    {
        var result = await _webApi.Update(Tax, "Tax");
        if (result.RecordId != null)
        {
            _navigationManager.NavigateTo($"tax-profile/details/{ProfileId}");
        }
    }

}