@page "/tax/create/{ProfileId}"

@using TaxCalculator.WebFrontend.Data
@using TaxCalculator.WebFrontend.Models
@using TaxCalculator.WebFrontend.Shared.FormInputs
@using TaxCalculator.Domain.Enums

@inject WebApi _webApi
@inject NavigationManager _navigationManager

<div>
    <div>
        <h3>Create tax configuration</h3>
    </div>
    <br />
    <div>
        <EditForm Model="@CreateTaxModel" OnSubmit="@HandleSubmitAsync">
            <Validator TModel="CreateTaxModel" />
            <TextInput Label="Amount" @bind-Value="CreateTaxModel.Amount" MessageFor="@(() => CreateTaxModel.Amount)"/>
            <TextInput Label="Applies before" @bind-Value="CreateTaxModel.AppliesBefore"  />
            <CheckBoxInput Label="Is Percentage" @bind-Value="CreateTaxModel.IsPercentage" />
            <SelectInput Label="Tax type" DefaultOption="Select tax type" Data="@TaxTypes" @bind-Value="CreateTaxModel.TaxType" />
            <ButtonSubmit/>
        </EditForm>  
    </div>
</div>

@code {

    [Parameter]
    public string ProfileId { get; set; }

    public CreateTaxModel CreateTaxModel { get; } = new();

    public Dictionary<TaxType, string> TaxTypes { get; set; }

    protected override async Task OnInitializedAsync()
    {
        CreateTaxModel.TaxProfileId = Guid.Parse(ProfileId);

        TaxTypes = new Dictionary<TaxType, string>
        {
            {TaxType.IncomeTax, "Income tax"},
            {TaxType.SocialTax, "Social tax"}
        };
    }

    private async Task HandleSubmitAsync()
    {
        var result = await _webApi.Create(CreateTaxModel, "Tax");
        if (result.RecordId != null)
        {
            _navigationManager.NavigateTo($"tax-profile/details/{ProfileId}");
        }
    }

}