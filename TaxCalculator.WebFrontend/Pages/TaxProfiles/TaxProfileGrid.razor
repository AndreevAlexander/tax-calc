@page "/tax-profile"

@using TaxCalculator.WebFrontend.Data
@using TaxProfileModel = TaxCalculator.Domain.Entities.TaxProfile;

@inject WebApi _webApi;

@if (TaxProfiles == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <div>
        <div style="display: flex; justify-content: space-between;">
            <h3>Tax Profiles</h3>
            <NavLink href="tax-profile/create" class="btn btn-primary">Create Profile</NavLink>
        </div>
        <div>
            <table class="table">
                <thead>
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Actions</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var profile in TaxProfiles)
                {
                    <tr>
                        <td>@profile.Name</td>
                        <td>@profile.Description</td>
                        <td style="box-sizing: border-box;">
                            <NavLink class="btn btn-info" href="@("tax-profile/details/" + profile.Id)">Details</NavLink>
                            <button class="btn btn-danger" onclick="@(() => HandleDeleteAsync(profile.Id))">Delete</button>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
}

@code {
    
    private List<TaxProfileModel>? TaxProfiles { get; set; }

    private bool IsLoaded { get; set; }

    protected override async Task OnInitializedAsync()
    {
        TaxProfiles = (await _webApi.GetManyAsync<TaxProfileModel>("TaxProfile")).ToList();
        IsLoaded = true;
    }

    private async Task HandleDeleteAsync(Guid id)
    {
        var result = await _webApi.Remove($"TaxProfile?TaxProfileId={id}");
        if (result.RecordId != null)
        {
            TaxProfiles = TaxProfiles?.Where(x => x.Id != id).ToList();
            StateHasChanged();
        }
    }
}