@page "/tax-profile/create"

@using TaxCalculator.WebFrontend.Data
@using TaxCalculator.WebFrontend.Validation
@using TaxCalculator.Domain.Services.Identifier
@using TaxCalculator.WebFrontend.Models
@using TaxCalculator.WebFrontend.Shared.FormInputs

@inject WebApi _webApi;
@inject NavigationManager _navigationManager;
@inject IIdentifierService _identifierService;

<div>
    <div>
        <h3>Create new profile</h3>
    </div>
    <br />
    <div>
        <EditForm Model="@CreateTaxProfileModel" OnValidSubmit="@HandleSubmitAsync">
            <Validator TModel="CreateTaxProfileModel" />
            
            <TextInput Label="Name"
                       @bind-Value="CreateTaxProfileModel.Name"
                       MessageFor="@(() => CreateTaxProfileModel.Name)"/>

            <TextAreaInput Label="Description"
                           @bind-Value="CreateTaxProfileModel.Description"
                           MessageFor="@(() => CreateTaxProfileModel.Description)"/>

            <SelectInput Label="Profile currency"
                         DefaultOption="Select currency"
                         Data="_currencies"
                         @bind-Value="CreateTaxProfileModel.ProfileCurrencyId"
                         MessageFor="@(() => CreateTaxProfileModel.ProfileCurrencyId)"/>
            <ButtonSubmit/>
        </EditForm>
    </div>
</div>

@code {
    private CreateTaxProfileModel CreateTaxProfileModel { get; set; } = new();
    
    private Dictionary<string, string>? _currencies;

    protected override async Task OnInitializedAsync()
    {
        _currencies = _identifierService.Currencies.ToDictionary()
            .ToDictionary(x => x.Key.ToString(), x => x.Value);
    }
    
    private async Task HandleSubmitAsync()
    {
        var result = await _webApi.Create(CreateTaxProfileModel, "TaxProfile");
        if (result.RecordId != null)
        {
            _navigationManager.NavigateTo($"tax-profile/details/{result.RecordId}");
        }
    }
}