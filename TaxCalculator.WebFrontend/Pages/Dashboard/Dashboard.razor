@page "/dashboard"

@using TaxCalculator.WebFrontend.Data
@using TaxCalculator.WebFrontend.Models

@inject WebApi _webApi

<PageTitle>Dashboard</PageTitle>

<div>
    <div>
        <ProfileForm OnSubmit="@HandleSubmitAsync"/>
    </div>
    <br />
    <div>
        <table class="table" style="width: 100%">
            <thead>
            <tr>
                <th>Month</th>
                <th>Income Tax</th>
                <th>Social Tax</th>
                <th>Income Gross @(CalculateTaxesModel?.Currency != null ? $"({CalculateTaxesModel?.Currency})" : "")</th>
                <th>Income Net @(CalculateTaxesModel?.Currency != null ? $"({CalculateTaxesModel?.Currency})" : "")</th>
            </tr>
            </thead>
            <tbody>
            @if (CalculateTaxesModel != null)
            {
                @foreach (var information in CalculateTaxesModel.TaxInformation)
                {
                    <tr>
                        <td>@information.Month</td>
                        <td>@information.IncomeTax</td>
                        <td>@information.SocialTax</td>
                        <td>@information.IncomeGross</td>
                        <td>@information.IncomeNet</td>
                    </tr>
                }
            }
            else
            {
                @if (IsTaxLoading)
                {
                    <p>
                        <em>Loading...</em>
                    </p>
                }
            }
            </tbody>
            <tfoot>
            <tr>
                <td></td>
                <td></td>
                <td>Total (gross/net):</td>
                <td>@CalculateTaxesModel?.IncomeTotal?.TotalGross</td>
                <td>@CalculateTaxesModel?.IncomeTotal?.TotalNet</td>
            </tr>
            </tfoot>
        </table>
    </div>
</div>

@code {
    private CalculateTaxesModel? CalculateTaxesModel { get; set; }

    private bool IsTaxLoading { get; set; }

    private async Task HandleSubmitAsync(Guid? profileId)
    {
        IsTaxLoading = true;
        ClearDisplay();
      
        if (profileId.HasValue)
        {
            CalculateTaxesModel = await _webApi.GetOneAsync<CalculateTaxesModel?>($"TaxProfile/CalculateTaxes?ProfileId={profileId}");
        }

        IsTaxLoading = false;
    }

    private void ClearDisplay()
    {
        if (CalculateTaxesModel != null)
        {
            CalculateTaxesModel.TaxInformation.Clear();
            CalculateTaxesModel.IncomeTotal = null;
            StateHasChanged();
        }
    }
}